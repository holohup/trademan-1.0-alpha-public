# Generated by Django 2.2.19 on 2022-09-28 18:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Figi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(max_length=15, unique=True, verbose_name='figi')),
                ('ticker', models.CharField(max_length=10, verbose_name='Тикер')),
                ('name', models.CharField(max_length=100, verbose_name='Название компании')),
                ('lot', models.PositiveIntegerField(verbose_name='Размер лота')),
                ('min_price_increment', models.DecimalField(decimal_places=10, max_digits=20, verbose_name='Минимальный шаг цены')),
                ('type', models.CharField(choices=[('S', 'Stock'), ('F', 'Future')], max_length=1, verbose_name='Акция или фьючерс')),
            ],
            options={
                'verbose_name': 'figi',
                'unique_together': {('ticker', 'type')},
            },
        ),
        migrations.CreateModel(
            name='Spread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Активная заявка?')),
                ('sell', models.BooleanField(verbose_name='Продать?')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('executed', models.PositiveIntegerField(default=0, verbose_name='Сколько уже исполнено')),
                ('price', models.IntegerField(verbose_name='Цена спреда')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Figi', verbose_name='Актив')),
                ('near_leg', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='near_leg', to='base.Figi', verbose_name='Ближняя нога')),
            ],
            options={
                'verbose_name': 'Спред',
                'verbose_name_plural': 'Спреды',
            },
        ),
        migrations.CreateModel(
            name='SellBuy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Активная заявка?')),
                ('sell', models.BooleanField(verbose_name='Продать?')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('executed', models.PositiveIntegerField(default=0, verbose_name='Сколько уже исполнено')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Figi', verbose_name='Актив')),
            ],
            options={
                'verbose_name': 'Купи-Продай',
                'verbose_name_plural': 'Купи-Продайки',
            },
        ),
        migrations.CreateModel(
            name='RestoreStops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Активная заявка?')),
                ('sell', models.BooleanField(verbose_name='Продать?')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('executed', models.PositiveIntegerField(default=0, verbose_name='Сколько уже исполнено')),
                ('price', models.DecimalField(decimal_places=10, max_digits=20, verbose_name='Цена')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.Figi', verbose_name='Актив')),
            ],
            options={
                'verbose_name': 'Восстановление стопов',
                'verbose_name_plural': 'Восстановления стопов',
            },
        ),
    ]
